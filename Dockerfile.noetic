FROM osrf/ros:noetic-desktop-full

#to solve this issue https://github.com/ethz-asl/kalibr/issues/644
RUN apt-get update && apt-get install libfprint* fprintd* libpam-fprintd* -y 
RUN dpkg --configure -a 

ARG HOME=/root 
ARG ROS_DISTRO=noetic
ARG WORKSPACE=catkin_ws
# Dependencies we use, catkin tools is very good build system
# https://github.com/ethz-asl/kalibr/wiki/installation
RUN apt-get update && DEBIAN_FRONTEND=noninteractive \
	apt-get install -y \
	git wget autoconf automake nano \
	python3-dev python3-pip python3-scipy python3-matplotlib \
	ipython3 python3-wxgtk4.0 python3-tk python3-igraph python3-pyx \
	libeigen3-dev libboost-all-dev libsuitesparse-dev \
	doxygen \
	libopencv-dev \
	curl \
	libpoco-dev libtbb-dev libblas-dev liblapack-dev libv4l-dev \
	python3-catkin-tools python3-osrf-pycommon

# Agent forwarding during docker build https://stackoverflow.com/questions/43418188/ssh-agent-forwarding-during-docker-build
# install ssh client and git
RUN apt-get install openssh-client git
# SSH and Github 
RUN mkdir -p -m 0600 ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts

RUN mkdir $HOME/calibration
RUN mkdir $HOME/bags

WORKDIR $HOME/$WORKSPACE
RUN mkdir -p src && \
	catkin init && \
	catkin config --extend /opt/ros/$ROS_DISTRO && \
	catkin config --cmake-args -DCMAKE_BUILD_TYPE=Release

WORKDIR $HOME/$WORKSPACE/src
RUN git clone https://github.com/ethz-asl/kalibr.git
RUN --mount=type=ssh git clone git@github.com:larics/camera_calibration.git

# Install tmux and tmuxinator
RUN curl https://raw.githubusercontent.com/larics/uav_ros_stack/main/installation/dependencies/tmux/dottmux.conf >>  $HOME/.tmux.conf
RUN sudo apt-get -y install tmux tmuxinator
RUN curl https://raw.githubusercontent.com/larics/uav_ros_stack/main/miscellaneous/shell_additions/shell_scripts.sh >> $HOME/.shell_scripts.sh

RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> $HOME/.bashrc
RUN echo "export KALIBR_MANUAL_FOCAL_LENGTH_INIT=1" >> $HOME/.bashrc 
RUN catkin build --limit-status-rate 0.2 --jobs 8 
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> $HOME/.bashrc
RUN echo "source $HOME/$WORKSPACE/devel/setup.bash" >> $HOME/.bashrc
RUN echo "source $HOME/.shell_scripts.sh" >> $HOME/.bashrc

WORKDIR $HOME/$WORKSPACE/src/camera_calibration/startup